{"version":3,"sources":["hooks/useLocalStorage.js","context/UserContext.js","routes/Nav.js","homepage/Homepage.js","common/SearchForm.js","api/api.js","companies/CompanyCard.js","common/LoadingSpinner.js","companies/CompanyList.js","jobs/JobCard.js","jobs/JobCardList.js","jobs/JobList.js","companies/CompanyDetail.js","common/Alert.js","auth/LoginForm.js","profiles/ProfileForm.js","auth/SignupForm.js","routes/PrivateRoute.js","routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","key","firstValue","arguments","length","undefined","initVal","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","item","setItem","useEffect","console","debug","removeItem","UserContext","createContext","Nav","_ref","logout","currUser","useContext","_jsxs","className","children","_jsx","Link","to","NavLink","onClick","first_name","username","Homepage","firstName","SearchForm","searchFor","searchTerm","setSearchTerm","onSubmit","event","preventDefault","trim","type","name","placeholder","value","onChange","target","JoblyApi","_classCallCheck","_createClass","_request","_asyncToGenerator","_regeneratorRuntime","mark","_callee","endpoint","data","method","url","headers","params","message","_args","wrap","_context","prev","next","concat","process","Authorization","token","axios","abrupt","sent","t0","error","response","Array","isArray","stop","_x","apply","_getCurrUser","_callee2","res","_context2","this","request","user","_x2","_getCompany","_callee3","handle","_context3","company","_x3","_getCompanies","_callee4","_context4","companies","_x4","_getJobs","_callee5","title","_context5","jobs","_x5","_applyToJob","_callee6","id","_context6","_x6","_x7","_login","_callee7","_context7","_x8","_signup","_callee8","_context8","_x9","_saveProfile","_callee9","_context9","_x10","_x11","CompanyCard","description","logoUrl","src","alt","LoadingSpinner","CompanyList","setCompanies","search","getCompanies","map","c","JobCard","salary","equity","companyName","_useContext","appliedToJob","applyToJob","applied","setApplied","handleApply","_ref2","disabled","JobCardList","j","JobList","setJobs","getJobs","CompanyDetail","useParams","setCompany","getCompany","comp","Alert","_ref$type","_ref$messages","messages","role","LoginForm","login","history","useHistory","password","formData","setFormData","_useState3","_useState4","formErrs","setFormErrs","handleSubmit","success","push","handleChange","_event$target","_objectSpread","_defineProperty","htmlFor","autoComplete","required","ProfileForm","setCurrUser","lastName","email","_useState5","_useState6","saveConfirmed","setSaveConfirmed","profileData","updatedUser","saveProfile","SignupForm","signup","PrivateRoute","exact","path","Route","Redirect","Routes","register","Switch","App","infoLoaded","setInfoLoaded","Set","applicationIds","setApplicationIds","_useLocalStorage","_useLocalStorage2","setToken","getCurrUser","_jwt$decode","_currUser","jwt","decode","applications","signupData","_token","_ref3","loginData","_token2","has","BrowserRouter","Provider","_toConsumableArray","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.3f3e7314.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\n/** Custom hook keeps state data synced with localstorage\n *\n * This creates 'item' as state and looks in localStorage for curr value\n *\n * (default 'firstValue' if not found)\n *\n * On item change, effect reruns:\n * - if new state null, removes from localstorage\n * - else, updates localstorage\n */\n\nconst useLocalStorage = (key, firstValue = null) => {\n  const initVal = localStorage.getItem(key) || firstValue;\n\n  const [item, setItem] = useState(initVal);\n\n  useEffect(() => {\n    console.debug(\"hooks useLocalStorage useEffect\", \"item=\", item);\n\n    if (item === null) {\n      localStorage.removeItem(key);\n    } else {\n      localStorage.setItem(key, item);\n    }\n  }, [key, item]);\n\n  return [item, setItem];\n};\n\nexport default useLocalStorage;\n","import { createContext } from \"react\";\n\n/** Context provides currUser obj and setter\n *\n */\n\nconst UserContext = createContext();\n\nexport default UserContext;\n","import React, { useContext } from \"react\";\nimport UserContext from \"../context/UserContext\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport \"./Nav.css\";\n\n/** Navbar\n * common to every page:\n * Logged in user will see links to main site pages,\n * visitor will see links to login/sigunup form pages\n */\n\nconst Nav = ({ logout }) => {\n  const { currUser } = useContext(UserContext);\n  console.debug(\"Nav\", \"currUser=\", currUser);\n\n  const loggedInNav = () => {\n    return (\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item mr-4\">\n          <NavLink className=\"nav-link\" to=\"/companies\">\n            Companies\n          </NavLink>\n        </li>\n        <li className=\"nav-item mr-4\">\n          <NavLink className=\"nav-link\" to=\"/jobs\">\n            Jobs\n          </NavLink>\n        </li>\n        <li className=\"nav-item mr-4\">\n          <NavLink className=\"nav-link\" to=\"/profile\">\n            Profile\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/\" onClick={logout}>\n            Log out {currUser.first_name || currUser.username}\n          </Link>\n        </li>\n      </ul>\n    );\n  };\n\n  const loggedOutNav = () => {\n    return (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item mr-4\">\n          <NavLink className=\"nav-link\" to=\"/login\">\n            Login\n          </NavLink>\n        </li>\n        <li className=\"nav-item mr-4\">\n          <NavLink className=\"nav-link\" to=\"/signup\">\n            Sign up\n          </NavLink>\n        </li>\n      </ul>\n    );\n  };\n\n  return (\n    <nav className=\"Nav navbar navbar-expand-md px-3\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Jobly\n      </Link>\n      {currUser ? loggedInNav() : loggedOutNav()}\n    </nav>\n  );\n};\n\nexport default Nav;\n","import \"./Homepage.css\";\nimport { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\n\n/** Jobly homepage\n *\n * Displays welcome message or login/regsiter buttons\n *\n * Route: /\n *\n * Routes -> Homepage\n */\n\nconst Homepage = () => {\n  const { currUser } = useContext(UserContext);\n  console.debug(\"Homepage\", \"currUser=\", currUser);\n\n  return (\n    <div className=\"Homepage\">\n      <div className=\"container text-center\">\n        <h1 className=\"mb-4 font-weight-bold text-white\">Jobly</h1>\n        <p className=\"lead text-light\">\n          All the jobs in one, convenient place.\n        </p>\n        {currUser ? (\n          <h2 className=\"lead-3 text-white\">\n            Welcome back, {currUser.firstName || currUser.username}!\n          </h2>\n        ) : (\n          <div className=\"d-flex gap-3 justify-content-center\">\n            <Link className=\"btn btn-primary font-weight-bold mr-3\" to=\"/login\">\n              Log in\n            </Link>\n            <Link\n              className=\"btn btn-success font-weight-bold mr-3\"\n              to=\"/signup\"\n            >\n              Sign up\n            </Link>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import { useState } from \"react\";\nimport \"./SearchForm.css\";\n\n/** Search:\n *\n * Is displayed on companylist and joblist pages so that results may be filtered\n *\n * SearchForm component doesn't do searching, but renders search form and calls searchFor func prop in parent to perform search\n */\n\nconst SearchForm = ({ searchFor }) => {\n  console.debug(\"SearchForm\", \"searchFor=\", typeof searchFor);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // handle form submission\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    searchFor(searchTerm.trim() || undefined);\n    setSearchTerm(searchTerm.trim());\n  };\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n  return (\n    <div className=\"SearchForm mb-4\">\n      <form onSubmit={handleSubmit} className=\"form-inline\">\n        <input\n          type=\"text\"\n          name=\"searchTerm\"\n          placeholder=\"Search term...\"\n          value={searchTerm}\n          onChange={handleChange}\n          className=\"form-control form-control-lg flex-grow-1 mb-2\"\n        />\n        <button className=\"btn btn-lg btn-info\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interacting with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"JoblyApi request API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"JoblyApi request API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get current user */\n  static async getCurrUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  /** Get companies */\n  static async getCompanies(name) {\n    let res = await this.request(\"companies\", { name });\n    return res.companies;\n  }\n\n  /** Get jobs list (filtered by title if not udnefined) */\n  static async getJobs(title) {\n    let res = await this.request(\"jobs\", { title });\n    return res.jobs;\n  }\n\n  /**Apply for a job */\n  static async applyToJob(username, id) {\n    await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n  }\n\n  /** Get token fo rlogin from username, password */\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  /** Signup */\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n}\n\n// for now, put token (\"testuser\" / \"password\" on class)\n// JoblyApi.token =\n//   \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n//   \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n//   \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\n\nexport default JoblyApi;\n","import { Link } from \"react-router-dom\";\nimport \"./CompanyCard.css\";\n\n/** Display info about company\n *\n * Rendered by CompanyList to present card for each company\n *\n *  CompanyList -> CompanyCard\n */\n\nconst CompanyCard = ({ name, description, logoUrl, handle }) => {\n  console.debug(\"CompanyCard\", name, logoUrl);\n  return (\n    <Link className=\"CompanyCard card\" to={`/companies/${handle}`}>\n      <div className=\"card-body\">\n        <h6 className=\"card-title\">\n          {name}\n          {logoUrl && (\n            <img src={`${logoUrl}`} alt={name} className=\"float-right ml-5\" />\n          )}\n        </h6>\n        <p className=\"card-desc\">\n          <small>{description}</small>\n        </p>\n      </div>\n    </Link>\n  );\n};\n\nexport default CompanyCard;\n","import \"./LoadingSpinner.css\";\n\nconst LoadingSpinner = () => {\n  return <div className=\"LoadingSpinner\">Loading...</div>;\n};\n\nexport default LoadingSpinner;\n","import { useState, useEffect } from \"react\";\nimport SearchForm from \"../common/SearchForm\";\nimport JoblyApi from \"../api/api\";\nimport CompanyCard from \"./CompanyCard\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\n/** Page with list of companies:\n *\n * on mount, loads companies from api\n * reloads filtered companies on searchform submit\n *\n *  Route: /companies\n */\n\nconst CompanyList = () => {\n  console.debug(\"CompanyList\");\n\n  const [companies, setCompanies] = useState(null);\n\n  useEffect(() => {\n    console.debug(\"CompanyList useEffect GETCOMPANIES\");\n    search();\n  }, []);\n\n  // func passed down as prop, triggered by searchform submit\n  const search = async (name) => {\n    const companies = await JoblyApi.getCompanies(name);\n    setCompanies(companies);\n  };\n\n  if (!companies) return <LoadingSpinner />;\n\n  return (\n    <div className=\"CompanyList col-md-8 offset-md-2\">\n      <SearchForm searchFor={search} />\n      {companies.length ? (\n        <div className=\"CompanyList-list\">\n          {companies.map((c) => (\n            <CompanyCard\n              key={c.handle}\n              handle={c.handle}\n              name={c.name}\n              description={c.description}\n              logoUrl={c.logoUrl}\n            />\n          ))}\n        </div>\n      ) : (\n        <p className=\"lead\">Sorry, no results have been found!</p>\n      )}\n    </div>\n  );\n};\n\nexport default CompanyList;\n","import { useContext, useState, useEffect } from \"react\";\nimport \"./JobCard.css\";\nimport UserContext from \"../context/UserContext\";\n\n/** Show details for job card\n *  rendered by JobCardList to show card\n *\n */\n\nconst JobCard = ({ id, title, salary, equity, companyName }) => {\n  console.debug(\"JobCard\");\n\n  const { appliedToJob, applyToJob } = useContext(UserContext);\n  const [applied, setApplied] = useState();\n\n  // updates applied status\n  useEffect(() => {\n    console.debug(\"JobCard useEffect updateAppliedStatus\", \"id=\", id);\n\n    setApplied(appliedToJob(id));\n  }, [id, appliedToJob]);\n\n  // apply for a job\n  const handleApply = async (event) => {\n    if (appliedToJob(id)) return;\n    applyToJob(id);\n    setApplied(true);\n  };\n\n  return (\n    <div className=\"JobCard card\">\n      <div className=\"card-body\">\n        <h6 className=\"card-title\">{title}</h6>\n        <p>{companyName}</p>\n        {salary && (\n          <div>\n            <small>Salary: {salary}</small>\n          </div>\n        )}\n        {equity !== undefined && (\n          <div>\n            <small>Equity: {equity}</small>\n          </div>\n        )}\n        <button\n          onClick={handleApply}\n          disabled={applied}\n          className=\"btn btn-danger font-weight-bold\"\n        >\n          {applied ? \"Applied!\" : \"Apply now\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default JobCard;\n","import JobCard from \"./JobCard\";\n\n/** Display list of job cards:\n *\n * used by JobList and CompanyDetails\n *\n * gets apply func prop to be called by jobcards on user applicaiton\n */\n\nconst JobCardList = ({ jobs }) => {\n  console.debug(\"JobCardList\", \"jobs=\", jobs);\n  return (\n    <div className=\"JobCardList\">\n      {jobs.map((j) => (\n        <JobCard\n          key={j.id}\n          id={j.id}\n          title={j.title}\n          salary={j.salary}\n          equity={j.equity}\n          companyName={j.companyName}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default JobCardList;\n","import { useState, useEffect } from \"react\";\nimport SearchForm from \"../common/SearchForm\";\nimport JoblyApi from \"../api/api\";\nimport JobCardList from \"./JobCardList\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\n/** Display page with jobs list\n *\n * on mount, load jobs from API\n * reloads filtered jobs on search form submission\n *\n * JobList -> JobCardList -> Jobcard\n *\n * Route: /jobs\n */\n\nconst JobList = () => {\n  console.debug(\"JobList\");\n  const [jobs, setJobs] = useState(null);\n\n  useEffect(() => {\n    console.debug(\"JobList useEffect\");\n    search();\n  }, []);\n\n  // triggered by search form submission\n  const search = async (title = undefined) => {\n    const jobs = await JoblyApi.getJobs(title);\n    setJobs(jobs);\n  };\n\n  if (!jobs) return <LoadingSpinner />;\n\n  return (\n    <div className=\"JobList col-md-8 offset-md-2\">\n      <SearchForm searchFor={search} />\n      {jobs.length ? (\n        <JobCardList jobs={jobs} />\n      ) : (\n        <p className=\"lead\">Sorry, no jobs were found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default JobList;\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport JoblyApi from \"../api/api\";\nimport JobCardList from \"../jobs/JobCardList\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\nimport \"./CompanyDetail.css\";\n\n/** Company Detail Page for indivdiual company\n *\n * Displays info about company from api, along w jobs available there\n * Route: /companies/:handle\n */\n\nconst CompanyDetail = () => {\n  const { handle } = useParams();\n  console.debug(\"CompanyDetail\", \"handle=\", handle);\n  const [company, setCompany] = useState(null);\n\n  useEffect(() => {\n    const getCompany = async () => {\n      const comp = await JoblyApi.getCompany(handle);\n      setCompany(comp);\n    };\n\n    getCompany();\n  }, [handle]);\n\n  if (!company) return <LoadingSpinner />;\n\n  return (\n    <div className=\"CompanyDetail col-md-8 offset-md-2\">\n      {company.logoUrl && (\n        <img className=\"mb-2\" src={company.logoUrl} alt={company.handle} />\n      )}\n      <h4>{company.name}</h4>\n      <p>{company.description}</p>\n      <JobCardList jobs={company.jobs} />\n    </div>\n  );\n};\n\nexport default CompanyDetail;\n","/**\n * Component for showing bootstrap type alerts\n *\n * Used in {LoginForm, SignupForm, PorfileForm}\n */\n\nconst Alert = ({ type = \"danger\", messages = [] }) => {\n  console.debug(\"Alert\", \"type=\", type, \"messages=\", messages);\n\n  return (\n    <div className={`mt-2 alert alert-${type}`} role=\"alert\">\n      {messages.map((error) => (\n        <p className=\"mb-0 small\" key={error}>\n          {error}\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default Alert;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport Alert from \"../common/Alert\";\nimport \"./Form.css\";\n\n/** Login form\n *\n * Displays form and manages updates to form state on change\n * On submission:\n * - calls login func passed down as prop\n * -redirects to /companies route if successful\n *\n *  - Route: /login\n */\n\nconst LoginForm = ({ login }) => {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [formErrs, setFormErrs] = useState([]);\n\n  console.debug(\n    \"LoginForm\",\n    \"login=\",\n    typeof login,\n    \"formData=\",\n    formData,\n    \"formErrs=\",\n    formErrs\n  );\n\n  /** Submission handler:\n   *\n   * calls login func and will redirect to /companies if successful\n   */\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const res = await login(formData);\n    if (res.success) {\n      history.push(\"/\");\n    } else {\n      setFormErrs(res.error);\n    }\n  };\n\n  // Update form data\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  return (\n    <div className=\"Form\">\n      <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n        <h3 className=\"mb-3 text-light text-bold\">Log In</h3>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group mb-4\">\n                <label htmlFor=\"username\">Username:</label>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  className=\"form-control\"\n                  value={formData.username}\n                  onChange={handleChange}\n                  autoComplete=\"username\"\n                  required\n                />\n              </div>\n              <div className=\"form-group mb-4\">\n                <label htmlFor=\"password\">Password:</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  className=\"form-control\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  autoComplete=\"current-password\"\n                  required\n                />\n              </div>\n\n              {formErrs.length ? (\n                <Alert type=\"danger\" messages={formErrs} />\n              ) : null}\n\n              <button type=\"submit\" className=\"btn btn-primary float-right\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import { useState, useContext } from \"react\";\nimport Alert from \"../common/Alert\";\nimport JoblyApi from \"../api/api\";\nimport UserContext from \"../context/UserContext\";\n\nimport \"./ProfileForm.css\";\n\n/** Profile editing form\n *\n * displays profile form and handles changes to local form state\n * form submission calls api to save data and triggers user reloading\n *\n * Confirmation of successful save is a simple alert\n *\n * Route: /profile\n */\n\nconst ProfileForm = () => {\n  const { currUser, setCurrUser } = useContext(UserContext);\n  const [formData, setFormData] = useState({\n    firstName: currUser.firstName,\n    lastName: currUser.lastName,\n    email: currUser.email,\n    username: currUser.username,\n    password: \"\",\n  });\n  const [formErrs, setFormErrs] = useState([]);\n  const [saveConfirmed, setSaveConfirmed] = useState(false);\n\n  console.debug(\n    \"ProfileForm\",\n    \"currUser=\",\n    currUser,\n    \"formData=\",\n    formData,\n    \"formErrs=\",\n    formErrs,\n    \"saveConfirmed=\",\n    saveConfirmed\n  );\n\n  /** form submit:\n   *\n   * 1. attempt to save to backend and report any errors\n   * 2. if successful:\n   *  clear prev error messages and pwd\n   *  show save confirmed message\n   *  set currUser info throught site\n   */\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const profileData = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      password: formData.password,\n    };\n\n    const username = formData.username;\n    let updatedUser;\n\n    try {\n      updatedUser = await JoblyApi.saveProfile(username, profileData);\n    } catch (error) {\n      debugger;\n      setFormErrs(error);\n      return;\n    }\n\n    setFormData((prev) => ({ ...prev, password: \"\" }));\n    setFormErrs([]);\n    setSaveConfirmed(true);\n\n    // reload user info thorughout site\n    setCurrUser(updatedUser);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n    setFormErrs([]);\n  };\n\n  return (\n    <div className=\"ProfilePage\">\n      <div className=\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\n        <h3 className=\"text-white\">Profile:</h3>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group mt-2\">\n                <label htmlFor=\"username\">Username:</label>\n                <p className=\"form-control-plaintext\">{formData.username}</p>\n              </div>\n              <div className=\"form-group mt-2\">\n                <label htmlFor=\"firstName\">First Name:</label>\n                <input\n                  type=\"text\"\n                  name=\"firstName\"\n                  id=\"firstName\"\n                  className=\"form-control\"\n                  value={formData.firstName}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group mt-2\">\n                <label htmlFor=\"lastName\">Last Name:</label>\n                <input\n                  type=\"text\"\n                  name=\"lastName\"\n                  id=\"lastName\"\n                  className=\"form-control\"\n                  value={formData.lastName}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group mt-2\">\n                <label htmlFor=\"email\">Email:</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  className=\"form-control\"\n                  value={formData.email}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group mt-2\">\n                <label htmlFor=\"password\">\n                  Confirm password to save updated profile info:\n                </label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  className=\"form-control\"\n                  value={formData.password}\n                  onChange={handleChange}\n                />\n              </div>\n              {formErrs.length ? (\n                <Alert type=\"danger\" messages={formErrs} />\n              ) : null}\n              {saveConfirmed ? (\n                <Alert\n                  type=\"success\"\n                  messages={[\"Updated profile information!\"]}\n                />\n              ) : null}\n              <button\n                className=\"btn btn-secondary btn-block mt-4\"\n                type=\"submit\"\n              >\n                Save Changes\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileForm;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\nimport \"./Form.css\";\n\n/** Signup form\n *\n * Displays form and manages updates to form state on change\n * On submission:\n * - calls signup func passed down as prop\n * -redirects to /companies route if successful\n *\n *  - Route: /signup\n */\n\nconst SignupForm = ({ signup }) => {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  });\n  const [formErrs, setFormErrs] = useState([]);\n\n  console.debug(\n    \"SignupForm\",\n    \"signup=\",\n    typeof signup,\n    \"formData=\",\n    formData,\n    \"formErrs=\",\n    formErrs\n  );\n\n  /** Submission handler:\n   *\n   * calls singup func and will redirect to /companies if successful\n   */\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const res = await signup(formData);\n    if (res.success) {\n      history.push(\"/\");\n    } else {\n      setFormErrs(res.error);\n    }\n  };\n\n  // Update form data\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  return (\n    <div className=\"Form\">\n      <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n        <h3 className=\"mb-3 text-light text-bold\">Sign Up</h3>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group mb-4\">\n                <label htmlFor=\"username\">Username:</label>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  className=\"form-control\"\n                  value={formData.username}\n                  onChange={handleChange}\n                  autoComplete=\"username\"\n                  required\n                />\n              </div>\n              <div className=\"form-group mb-4\">\n                <label htmlFor=\"password\">Password:</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  className=\"form-control\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  autoComplete=\"current-password\"\n                  required\n                />\n              </div>\n              <div className=\"form-group mb-4\">\n                <label htmlFor=\"firstName\">First name:</label>\n                <input\n                  type=\"text\"\n                  name=\"firstName\"\n                  id=\"firstName\"\n                  className=\"form-control\"\n                  value={formData.firstName}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group mb-4\">\n                <label htmlFor=\"lastName\">Last name:</label>\n                <input\n                  type=\"text\"\n                  name=\"lastName\"\n                  id=\"lastName\"\n                  className=\"form-control\"\n                  value={formData.lastName}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group mb-4\">\n                <label htmlFor=\"email\">Email:</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  className=\"form-control\"\n                  value={formData.email}\n                  onChange={handleChange}\n                />\n              </div>\n\n              {formErrs.length ? (\n                <Alert type=\"danger\" messages={formErrs} />\n              ) : null}\n\n              <button type=\"submit\" className=\"btn btn-primary float-right\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupForm;\n","import { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\n\n/** Use this component instead of Routes\n * Component will check for valid currUser and if not present, will\n * redircet to login3\n */\n\nconst PrivateRoute = ({ exact, path, children }) => {\n  const { currUser } = useContext(UserContext);\n\n  console.debug(\n    \"PrivateRoute\",\n    \"exact=\",\n    exact,\n    \"path=\",\n    path,\n    \"currUser=\",\n    currUser\n  );\n\n  if (!currUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Route exact={exact} path={path}>\n      {children}\n    </Route>\n  );\n};\n\nexport default PrivateRoute;\n","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport Homepage from \"../homepage/Homepage\";\nimport CompanyList from \"../companies/CompanyList\";\nimport JobList from \"../jobs/JobList\";\nimport CompanyDetail from \"../companies/CompanyDetail\";\nimport LoginForm from \"../auth/LoginForm\";\nimport ProfileForm from \"../profiles/ProfileForm\";\nimport SignupForm from \"../auth/SignupForm\";\nimport PrivateRoute from \"./PrivateRoute\";\n\n/**\n * Site routes:\n *\n * PrivateRoutes are only visible when a user is logged in\n * Wrapped by <PrivateRoute></PrivateRoute>, an auth component\n * nonexistent route will redirect to home\n */\n\nconst Routes = ({ login, signup }) => {\n  console.debug(\n    \"Routes\",\n    `login=${typeof login}`,\n    `register=${typeof register}`\n  );\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <Homepage />\n        </Route>\n        <Route exact path=\"/login\">\n          <LoginForm login={login} />\n        </Route>\n        <Route exact path=\"/signup\">\n          <SignupForm signup={signup} />\n        </Route>\n        <PrivateRoute exact path=\"/companies\">\n          <CompanyList />\n        </PrivateRoute>\n        <PrivateRoute exact path=\"/jobs\">\n          <JobList />\n        </PrivateRoute>\n        <PrivateRoute exact path=\"/companies/:handle\">\n          <CompanyDetail />\n        </PrivateRoute>\n        <PrivateRoute exact path=\"/profile\">\n          <ProfileForm />\n        </PrivateRoute>\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Routes;\n","import { useState, useEffect } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Nav from \"./routes/Nav\";\nimport Routes from \"./routes/Routes\";\nimport JoblyApi from \"./api/api\";\nimport UserContext from \"./context/UserContext\";\nimport jwt from \"jsonwebtoken\";\nimport LoadingSpinner from \"./common/LoadingSpinner\";\n\n// key storing token in localStorage for re-login\nexport const TOKEN_STORAGE_ID = \"jobly-token\";\n\n/** Jobly app\n *\n * -infoLoaded - has user data been pulled from API? (manages loading spinner)\n *\n * -currUser - user obj from API. used to tell if someone is loged in, passed around via context\n *\n * -token - authetnication JWT for logged in users, required for most API calls, initially read from localstorage and synced via custom localstorage hook\n *\n */\n\nfunction App() {\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [applicationIds, setApplicationIds] = useState(new Set([]));\n  const [currUser, setCurrUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n\n  console.debug(\n    \"App\",\n    \"infoLoaded=\",\n    infoLoaded,\n    \"currUser=\",\n    currUser,\n    \"token=\",\n    token\n  );\n\n  // Load in user info from API. Will run when a user is logged in and has a token\n  // reruns when user logs out, dependency is value of token\n  useEffect(() => {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n\n    const getCurrUser = async () => {\n      if (token) {\n        try {\n          const { username } = jwt.decode(token);\n          // put token on API class so we can make API calls\n          JoblyApi.token = token;\n\n          const currUser = await JoblyApi.getCurrUser(username);\n          setCurrUser(currUser);\n          setApplicationIds(new Set(currUser.applications));\n        } catch (error) {\n          console.error(\"App loadUserInfo: problem loading\", error);\n          setCurrUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    };\n\n    // infoloaded set to false shile getcurruser runs, and once data fetched or error it wil be set back to false\n    setInfoLoaded(false);\n    getCurrUser();\n  }, [token]);\n\n  // function to handle logout\n  const logout = () => {\n    console.debug(\"App logout\");\n    setCurrUser(null);\n    setToken(null);\n  };\n\n  /** Function handles signup:\n   *\n   * Automatically logs user in upon signup (sets token)\n   *\n   * AWAIT function and check return value\n   */\n  const signup = async (signupData) => {\n    try {\n      const token = await JoblyApi.signup(signupData);\n      setToken(token);\n      return { success: true };\n    } catch (error) {\n      console.error(\"signup failed\", error);\n      return { success: false, error };\n    }\n  };\n\n  /** Function handles login */\n\n  const login = async (loginData) => {\n    try {\n      const token = await JoblyApi.login(loginData);\n      setToken(token);\n      return { success: true };\n    } catch (error) {\n      console.error(\"login failed\", error);\n      return { success: false, error };\n    }\n  };\n\n  /** Function checks if a job was applied to  */\n  const appliedToJob = (id) => {\n    return applicationIds.has(id);\n  };\n\n  /** Function to apply for a job: makes API call + updates set of application ids state */\n  const applyToJob = (id) => {\n    if (appliedToJob(id)) return;\n\n    JoblyApi.applyToJob(currUser.username, id);\n    setApplicationIds(new Set([...applicationIds, id]));\n  };\n\n  // if infoloaded false only show loading spinner\n  if (!infoLoaded) return <LoadingSpinner />;\n\n  return (\n    <BrowserRouter>\n      <UserContext.Provider\n        value={{ currUser, setCurrUser, appliedToJob, applyToJob }}\n      >\n        <div className=\"App\">\n          <Nav logout={logout} />\n          <Routes login={login} signup={signup} />\n        </div>\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}